#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

apiVersion: sonataflow.org/v1alpha08
kind: SonataFlow
metadata:
  annotations:
    sonataflow.org/description: Testing parallelism
    sonataflow.org/expressionLang: jq
    sonataflow.org/profile: dev
    sonataflow.org/version: "1.0"
  creationTimestamp: null
  labels:
    app: parallel
  name: parallel
  namespace: operatordemo
spec:
  flow:
    functions:
    - name: concatA
      operation: .result|=.+"A"
      type: expression
    - name: concatB
      operation: .result|=.+"B"
      type: expression
    - name: concatC
      operation: .result|=.+"C"
      type: expression
    start:
      stateName: Parallel
    states:
    - branches:
      - actions:
        - actionDataFilter:
            useResults: true
          functionRef:
            invoke: sync
            refName: concatA
        name: branchA
      - actions:
        - actionDataFilter:
            useResults: true
          functionRef:
            invoke: sync
            refName: concatB
        name: branchB
      - actions:
        - actionDataFilter:
            useResults: true
          functionRef:
            invoke: sync
            refName: concatC
        name: branchC
      completionType: atLeast
      end:
        terminate: true
      name: Parallel
      numCompleted: "2"
      type: parallel
  resources: {}
status:
  address: {}
  lastTimeRecoverAttempt: null
