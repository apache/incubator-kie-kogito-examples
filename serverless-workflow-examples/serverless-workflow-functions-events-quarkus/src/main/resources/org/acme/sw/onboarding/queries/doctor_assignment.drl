/**
 * Copyright 2020 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.acme.sw.onboarding.queries;
unit AssignmentUnit;

import org.acme.sw.onboarding.model.Doctor;
import org.acme.sw.onboarding.model.Patient;
import org.acme.sw.onboarding.model.SymptomSpecialty;
import org.acme.sw.onboarding.helpers.CalendarHelper;
import java.util.Collections;

rule PatientIsAChild
when
    $p: /patients[ assignedDoctor == null && CalendarHelper.calculateAge(dateOfBirth) < 18 ]
    $d: /doctors[ specialty == "Pediatrics" ]
then
    modify($p) { setAssignedDoctor($d) }
end

rule SymptomHasAMatch
when
    $p: /patients[ assignedDoctor == null && !symptoms.isEmpty() ]
    $s: /symptomSpecialties[ !Collections.disjoint(symptoms, $p.symptoms) ]
    $d: /doctors[ specialty == $s.specialty ]
then
    modify($p) { setAssignedDoctor($d) }
end

rule SymptomNotFound
when
    $p: /patients[ assignedDoctor == null ]
    $d: /doctors[ specialty == "Family medicine" ]
then
    modify($p) { setAssignedDoctor($d) }
end

query AssignDoctor
   $patients : /patients[ assignedDoctor != null  ]
end