#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

mp.messaging.incoming.applicants.connector=smallrye-kafka
mp.messaging.incoming.applicants.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
mp.messaging.incoming.applicants.group.id=kogito-sw-applicants-in
mp.messaging.incoming.applicants.auto.offset.reset=earliest

kogito.addon.messaging.unmarshaller.applicants=avro

mp.messaging.outgoing.decisions.connector=smallrye-kafka
mp.messaging.outgoing.decisions.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.decisions.group.id=kogito-sw-decisions-out

mp.messaging.incoming.out-decisions.connector=smallrye-kafka
mp.messaging.incoming.out-decisions.topic=decisions
mp.messaging.incoming.out-decisions.value.deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
mp.messaging.incoming.out-decisions.group.id=kogito-sw-decisions-in
mp.messaging.incoming.out-decisions.auto.offset.reset=earliest

mp.messaging.outgoing.out-applicants.connector=smallrye-kafka
mp.messaging.outgoing.out-applicants.topic=applicants
mp.messaging.outgoing.out-applicants.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer
mp.messaging.outgoing.out-applicants.group.id=kogito-sw-applicants-out

quarkus.devservices.enabled=false

quarkus.native.native-image-xmx=8g

# profile to pack this example into a container, to use it execute activate the maven container profile, -Dcontainer
%container.quarkus.container-image.build=true
%container.quarkus.container-image.push=false
%container.quarkus.container-image.group=${USER}
%container.quarkus.container-image.registry=dev.local
%container.quarkus.container-image.tag=1.0-SNAPSHOT
