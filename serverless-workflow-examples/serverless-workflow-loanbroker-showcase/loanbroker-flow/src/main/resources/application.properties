kogito.service.url=${KOGITO_SERVICE_CLUSTER_URL:http://localhost:8080}

kogito.messaging.as-cloudevents=true

quarkus.log.category."org.kie".level=DEBUG
quarkus.log.category."org.kogito".level=DEBUG
quarkus.log.category."org.acme".level=DEBUG
quarkus.swagger-ui.always-include=true
quarkus.http.cors=true
quarkus.rest-client.credit_bureau_yaml.url=${CREDIT_BUREAU_URL:http://localhost:8181/}
quarkus.rest-client.aggregator_yaml.url=${AGGREGATOR_URL:http://localhost:8282/}

mp.messaging.incoming.kogito_incoming_stream.path=/
mp.messaging.incoming.kogito_incoming_stream.connector=quarkus-http

quarkus.kubernetes.deploy=false

quarkus.kubernetes.deployment-target=knative
quarkus.knative.image-pull-policy=IfNotPresent
# Use the Kogito service discovery mechanism to get the services url.
# For more information see: https://kiegroup.github.io/kogito-docs/serverlessworkflow/latest/cloud/kubernetes-service-discovery.html
quarkus.knative.env.vars.kogito_service_cluster_url=knative:serving.knative.dev/v1/Service/loanbroker-example/loanbroker-flow
quarkus.knative.env.vars.credit_bureau_url=knative:serving.knative.dev/v1/Service/loanbroker-example/loanbroker-credit-bureau
quarkus.knative.env.vars.aggregator_url=kubernetes:v1/Service/loanbroker-example/loanbroker-aggregator

# profile to pack this example into a container, to use it execute activate the maven container profile, -Dcontainer
%container.quarkus.container-image.group=dev.local
%container.quarkus.container-image.name=loanbroker-flow
%container.quarkus.container-image.build=true

# Kogito persistence configurations for enabling the serverless workflow persistence
%persistence.quarkus.datasource.db-kind=postgresql
%persistence.kogito.persistence.type=jdbc
%persistence.kogito.persistence.proto.marshaller=false
%persistence.kogito.persistence.auto.ddl=true
%persistence.kogito.persistence.query.timeout.millis=10000
%persistence.enable.resource.postgresql=true

# This env var will be generated with the quarkus-kubernetes plugin. See below.
%persistence.quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/postgres
%persistence.quarkus.datasource.username=postgres
%persistence.quarkus.datasource.password=pass

%persistence.quarkus.knative.env.vars.postgres_host=loanbroker-example-database

# Events produced by kogito-addons-quarkus-jobs-knative-eventing to program the timers on the jobs service.
%persistence.mp.messaging.outgoing.kogito-job-service-job-request-events.connector=quarkus-http
%persistence.mp.messaging.outgoing.kogito-job-service-job-request-events.url=${K_SINK:http://localhost:8787/jobs/events}
%persistence.mp.messaging.outgoing.kogito-job-service-job-request-events.method=POST