#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

kogito.service.url=${knative:services.v1.serving.knative.dev/loanbroker-example/loanbroker-flow}
%dev.kogito.service.url=http://localhost:8080

kogito.messaging.as-cloudevents=true
kogito.addon.messaging.outgoing.cloudEventMode.kogito_outgoing_stream=structured

quarkus.http.cors=true
quarkus.http.cors.origins=/.*/

quarkus.log.category."org.kie".level=DEBUG
quarkus.log.category."org.kogito".level=DEBUG
quarkus.log.category."org.acme".level=DEBUG
quarkus.swagger-ui.always-include=true

# Use the Kogito service discovery mechanism to get the services url.
# For more information see: https://kiegroup.github.io/kogito-docs/serverlessworkflow/latest/cloud/kubernetes-service-discovery.html
quarkus.rest-client.credit_bureau_yaml.url=${knative:services.v1.serving.knative.dev/loanbroker-example/loanbroker-credit-bureau}
quarkus.rest-client.aggregator_yaml.url=${kubernetes:services.v1/loanbroker-example/loanbroker-aggregator}

%dev.quarkus.rest-client.credit_bureau_yaml.url=http://localhost:8181
%dev.quarkus.rest-client.aggregator_yaml.url=http://localhost:8282

mp.messaging.incoming.kogito_incoming_stream.path=/
mp.messaging.incoming.kogito_incoming_stream.connector=quarkus-http

quarkus.knative.name=loanbroker-flow
quarkus.kubernetes.deployment-target=knative
quarkus.knative.image-pull-policy=if-not-present

quarkus.knative.min-scale=1
quarkus.knative.max-scale=1

# Kogito persistence configurations for enabling the serverless workflow persistence
%persistence.quarkus.container-image.registry=dev.local
%persistence.quarkus.container-image.group=${USER}
%persistence.quarkus.container-image.name=loanbroker-flow
%persistence.quarkus.container-image.build=true

%persistence.quarkus.datasource.db-kind=postgresql
%persistence.kie.flyway.enabled=true
%persistence.kogito.persistence.type=jdbc
%persistence.kogito.persistence.proto.marshaller=false
%persistence.kogito.persistence.query.timeout.millis=10000
%persistence.enable.resource.postgresql=true

# This env var will be generated with the quarkus-kubernetes plugin. See below.
%persistence.quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/postgres
%persistence.quarkus.datasource.username=postgres
%persistence.quarkus.datasource.password=pass

%persistence.quarkus.knative.env.vars.postgres_host=loanbroker-example-database

# Events produced by kogito-addons-quarkus-jobs-knative-eventing to program the timers on the jobs service.
%persistence.mp.messaging.outgoing.kogito-job-service-job-request-events.connector=quarkus-http
%persistence.mp.messaging.outgoing.kogito-job-service-job-request-events.url=${K_SINK:http://localhost:8787/v2/jobs/events}
%persistence.mp.messaging.outgoing.kogito-job-service-job-request-events.method=POST
