quarkus.devservices.enabled=false

kafka.bootstrap.servers=localhost:9092

#start the workflow events
##application channels
mp.messaging.outgoing.start.connector=smallrye-kafka
mp.messaging.outgoing.start.topic=newAccountEventType
mp.messaging.outgoing.start.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.start.group.id=kogito-sw-callback

##workflow channels
mp.messaging.incoming.newAccountEventType.connector=smallrye-kafka
mp.messaging.incoming.newAccountEventType.topic=newAccountEventType
mp.messaging.incoming.newAccountEventType.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.newAccountEventType.group.id=kogito-sw-callback

#activate account events
##application channels
mp.messaging.outgoing.activated.connector=smallrye-kafka
mp.messaging.outgoing.activated.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.activated.topic=activatedAccount
mp.messaging.outgoing.activated.group.id=kogito-sw-callback

mp.messaging.incoming.activate.connector=smallrye-kafka
mp.messaging.incoming.activate.topic=activateAccount
mp.messaging.incoming.activate.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.activate.group.id=kogito-sw-callback

##workflow channels
mp.messaging.incoming.activatedAccount.connector=smallrye-kafka
mp.messaging.incoming.activatedAccount.topic=activatedAccount
mp.messaging.incoming.activatedAccount.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.activatedAccount.group.id=kogito-sw-callback

mp.messaging.outgoing.activateAccount.connector=smallrye-kafka
mp.messaging.outgoing.activateAccount.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.activateAccount.topic=activateAccount
mp.messaging.outgoing.activateAccount.group.id=kogito-sw-callback

#validate email events
##application channels
mp.messaging.incoming.validate.connector=smallrye-kafka
mp.messaging.incoming.validate.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.validate.topic=validateAccountEmail
mp.messaging.incoming.validate.group.id=kogito-sw-callback

mp.messaging.outgoing.validated.connector=smallrye-kafka
mp.messaging.outgoing.validated.topic=validatedAccountEmail
mp.messaging.outgoing.validated.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.validated.group.id=kogito-sw-callback

##workflow channels
mp.messaging.outgoing.validateAccountEmail.connector=smallrye-kafka
mp.messaging.outgoing.validateAccountEmail.topic=validateAccountEmail
mp.messaging.outgoing.validateAccountEmail.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.validateAccountEmail.group.id=kogito-sw-callback

mp.messaging.incoming.validatedAccountEmail.connector=smallrye-kafka
mp.messaging.incoming.validatedAccountEmail.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.validatedAccountEmail.topic=validatedAccountEmail
mp.messaging.incoming.validatedAccountEmail.group.id=kogito-sw-callback

#Persistence configuration
kogito.persistence.type=jdbc

#run create tables scripts
kogito.persistence.auto.ddl=true

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/kogito

kogito.persistence.proto.marshaller=true

quarkus.grpc.dev-mode.force-server-start=false