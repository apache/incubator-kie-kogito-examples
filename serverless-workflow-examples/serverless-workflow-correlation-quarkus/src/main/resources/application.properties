#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

%prod.kafka.bootstrap.servers=localhost:9092

#start the workflow events
##application channels
mp.messaging.outgoing.start.connector=smallrye-kafka
mp.messaging.outgoing.start.topic=newAccountEventType
mp.messaging.outgoing.start.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.start.group.id=kogito-sw-callback

##workflow channels
mp.messaging.incoming.newAccountEventType.connector=smallrye-kafka
mp.messaging.incoming.newAccountEventType.topic=newAccountEventType
mp.messaging.incoming.newAccountEventType.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.newAccountEventType.group.id=kogito-sw-callback
mp.messaging.incoming.newAccountEventType.auto.offset.reset=earliest

#activate account events
##application channels
mp.messaging.outgoing.activated.connector=smallrye-kafka
mp.messaging.outgoing.activated.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.activated.topic=activatedAccount
mp.messaging.outgoing.activated.group.id=kogito-sw-callback

mp.messaging.incoming.activate.connector=smallrye-kafka
mp.messaging.incoming.activate.topic=activateAccount
mp.messaging.incoming.activate.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.activate.group.id=kogito-sw-callback
mp.messaging.incoming.activate.auto.offset.reset=earliest

##workflow channels
mp.messaging.incoming.activatedAccount.connector=smallrye-kafka
mp.messaging.incoming.activatedAccount.topic=activatedAccount
mp.messaging.incoming.activatedAccount.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.activatedAccount.group.id=kogito-sw-callback
mp.messaging.incoming.activatedAccount.auto.offset.reset=earliest

mp.messaging.outgoing.activateAccount.connector=smallrye-kafka
mp.messaging.outgoing.activateAccount.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.activateAccount.topic=activateAccount
mp.messaging.outgoing.activateAccount.group.id=kogito-sw-callback

#validate email events
##application channels
mp.messaging.incoming.validate.connector=smallrye-kafka
mp.messaging.incoming.validate.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.validate.topic=validateAccountEmail
mp.messaging.incoming.validate.group.id=kogito-sw-callback
mp.messaging.incoming.validate.auto.offset.reset=earliest

mp.messaging.outgoing.validated.connector=smallrye-kafka
mp.messaging.outgoing.validated.topic=validatedAccountEmail
mp.messaging.outgoing.validated.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.validated.group.id=kogito-sw-callback

##workflow channels
mp.messaging.outgoing.validateAccountEmail.connector=smallrye-kafka
mp.messaging.outgoing.validateAccountEmail.topic=validateAccountEmail
mp.messaging.outgoing.validateAccountEmail.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.validateAccountEmail.group.id=kogito-sw-callback

mp.messaging.incoming.validatedAccountEmail.connector=smallrye-kafka
mp.messaging.incoming.validatedAccountEmail.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.validatedAccountEmail.topic=validatedAccountEmail
mp.messaging.incoming.validatedAccountEmail.group.id=kogito-sw-callback
mp.messaging.incoming.validatedAccountEmail.auto.offset.reset=earliest

#Persistence configuration
kogito.persistence.type=jdbc

#run create tables scripts
kie.flyway.enabled=true

quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=postgres
%prod.quarkus.datasource.password=postgres
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/kogito

kogito.persistence.proto.marshaller=true

quarkus.grpc.dev-mode.force-server-start=false

# profile to pack this example into a container, to use it execute activate the maven container profile, -Dcontainer
%container.quarkus.container-image.build=true
%container.quarkus.container-image.push=false
%container.quarkus.container-image.group=${USER}
%container.quarkus.container-image.registry=dev.local
%container.quarkus.container-image.tag=1.0-SNAPSHOT
