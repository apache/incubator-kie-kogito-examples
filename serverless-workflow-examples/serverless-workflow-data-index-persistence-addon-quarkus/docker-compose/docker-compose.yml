version: '2.1'

services:
  postgres:
    container_name: postgres
    image: postgres:13.4-alpine3.14
    ports:
      - "5432:5432"
    volumes:
      - ./sql:/docker-entrypoint-initdb.d:Z
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "kogito", "-U", "kogito-user" ]
      timeout: 45s
      interval: 10s
      retries: 50
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  pgadmin-compose:
    image: dpage/pgadmin4:5.0
    environment:
      PGADMIN_DEFAULT_EMAIL: user@user.org
      PGADMIN_DEFAULT_PASSWORD: pass
    ports:
      - 8055:80
    depends_on:
      - postgres
    container_name: pgadmin-container

  data-index:
    container_name: data-index
    image: quay.io/kiegroup/kogito-data-index-postgresql-nightly:latest
    ports:
      - "8180:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./../target/classes/META-INF/resources/persistence/protobuf:/home/kogito/data/protobufs/
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres:5432/kogito"
      QUARKUS_DATASOURCE_USERNAME: kogito-user
      QUARKUS_DATASOURCE_PASSWORD: kogito-pass
      QUARKUS_HTTP_CORS_ORIGINS: "/.*/"
      QUARKUS_FLYWAY_MIGRATE_AT_START: "true"
      QUARKUS_FLYWAY_BASELINE_ON_MIGRATE: "true"
      QUARKUS_FLYWAY_TABLE: FLYWAY_DATAINDEX_SERVICE
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: update
      KOGITO_DATA_INDEX_QUARKUS_PROFILE: "http-events-support"

  serverless-workflow-service:
    container_name: serverless-workflow-service
    image: dev.local/${USER}/serverless-workflow-service:1.0-SNAPSHOT
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: "jdbc:postgresql://postgres:5432/kogito"
      QUARKUS_DATASOURCE_USERNAME: kogito-user
      QUARKUS_DATASOURCE_PASSWORD: kogito-pass
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      KOGITO_SERVICE_URL: http://serverless-workflow-service:8080


