<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.kie.kogito.examples</groupId>
    <artifactId>kogito-examples</artifactId>
    <version>1.24.1-SNAPSHOT</version>
  </parent>

  <artifactId>serverless-workflow-examples</artifactId>
  <packaging>pom</packaging>
  <name>Kogito Example :: Serverless Workflow</name>

  <properties>
    <!-- Port 0 means dynamic port -->
    <tests.quarkus.http.port>0</tests.quarkus.http.port>
    <!-- override default to fast-jar packaging for forward-compatibility -->
    <quarkus.package.type>fast-jar</quarkus.package.type>
    <!-- quarkus platform related properties -->
    <quarkus-plugin.version>2.10.3.Final</quarkus-plugin.version>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
    <quarkus.platform.version>2.10.3.Final</quarkus.platform.version>
    <kogito.bom.group-id>org.kie.kogito</kogito.bom.group-id>
    <kogito.bom.artifact-id>kogito-bom</kogito.bom.artifact-id>
    <kogito.bom.version>${project.version}</kogito.bom.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.kie.kogito</groupId>
        <artifactId>kogito-quarkus-test-utils</artifactId>
        <version>${project.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>serverless-workflow-annotations-description</module>
        <module>serverless-workflow-callback-quarkus</module>
        <module>serverless-workflow-compensation-quarkus</module>
        <module>serverless-workflow-consuming-events-over-http-quarkus</module>
        <module>serverless-workflow-correlation-quarkus</module>
        <module>serverless-workflow-error-quarkus</module>
        <module>serverless-workflow-events-quarkus</module>
        <module>serverless-workflow-expression-quarkus</module>
        <module>serverless-workflow-foreach-quarkus</module>
        <module>serverless-workflow-functions-events-quarkus</module>
        <module>serverless-workflow-functions-quarkus</module>
        <module>serverless-workflow-funqy</module>
        <module>serverless-workflow-github-showcase</module>
        <module>serverless-workflow-greeting-quarkus</module>
        <module>serverless-workflow-greeting-rpc-quarkus</module>
        <module>serverless-workflow-order-processing</module>
        <module>serverless-workflow-saga-quarkus</module>
        <module>serverless-workflow-service-calls-quarkus</module>
        <module>serverless-workflow-temperature-conversion</module>
        <module>serverless-workflow-qas-service-showcase</module>
        <module>serverless-workflow-newsletter-subscription</module>
      </modules>
    </profile>

    <profile>
      <id>persistence</id>
      <activation>
        <property>
          <name>persistence</name>
        </property>
      </activation>
      <properties>
        <tests.category>persistence</tests.category>
      </properties>
      <modules>
        <module>serverless-workflow-callback-quarkus</module>
        <module>serverless-workflow-qas-service-showcase</module>
        <module>serverless-workflow-newsletter-subscription</module>
      </modules>
    </profile>

    <profile>
      <id>native</id>
      <properties>
        <failsafe.include>**/Native*IT.java</failsafe.include>
        <failsafe.exclude></failsafe.exclude>
        <quarkus.package.type>native</quarkus.package.type>
        <quarkus.native.native-image-xmx>8g</quarkus.native.native-image-xmx>
        <!-- Native building needs a fixed port for tests -->
        <tests.quarkus.http.port>8080</tests.quarkus.http.port>
      </properties>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <modules>
        <module>serverless-workflow-callback-quarkus</module>
        <module>serverless-workflow-compensation-quarkus</module>
        <module>serverless-workflow-error-quarkus</module>
        <module>serverless-workflow-events-quarkus</module>
        <module>serverless-workflow-expression-quarkus</module>
        <module>serverless-workflow-functions-events-quarkus</module>
        <module>serverless-workflow-functions-quarkus</module>
        <module>serverless-workflow-funqy</module>
        <module>serverless-workflow-greeting-quarkus</module>
        <module>serverless-workflow-service-calls-quarkus</module>
        <module>serverless-workflow-temperature-conversion</module>
      </modules>
    </profile>

    <profile>
      <id>productized</id>
      <activation>
        <property>
          <name>productized</name>
        </property>
      </activation>
      <modules>
        <module>serverless-workflow-annotations-description</module>
        <module>serverless-workflow-callback-quarkus</module>
        <module>serverless-workflow-compensation-quarkus</module>
        <module>serverless-workflow-consuming-events-over-http-quarkus</module>
        <module>serverless-workflow-correlation-quarkus</module>
        <module>serverless-workflow-error-quarkus</module>
        <module>serverless-workflow-events-quarkus</module>
        <module>serverless-workflow-expression-quarkus</module>
        <module>serverless-workflow-foreach-quarkus</module>
        <module>serverless-workflow-functions-quarkus</module>
        <module>serverless-workflow-funqy</module>
        <module>serverless-workflow-greeting-quarkus</module>
        <module>serverless-workflow-greeting-rpc-quarkus</module>
        <module>serverless-workflow-order-processing</module>
        <module>serverless-workflow-saga-quarkus</module>
        <module>serverless-workflow-service-calls-quarkus</module>
        <module>serverless-workflow-temperature-conversion</module>
        <module>serverless-workflow-qas-service-showcase</module>
        <module>serverless-workflow-newsletter-subscription</module>
      </modules>
    </profile>
  </profiles>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>${quarkus.platform.group-id}</groupId>
          <artifactId>quarkus-maven-plugin</artifactId>
          <version>${quarkus-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.surefire.plugin}</version>
          <configuration>
            <systemPropertyVariables>
              <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${version.surefire.plugin}</version>
          <configuration>
            <systemPropertyVariables>
              <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
              <quarkus.http.test-port>${tests.quarkus.http.port}</quarkus.http.test-port>
            </systemPropertyVariables>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
