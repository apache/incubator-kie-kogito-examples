#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

id: event_state_timeouts
version: "1.0"
name: Event State Timeouts Example
description: Simple process to show the event state timeout working
start: PrintStartMessage
events:
  - name: event1
    source: ''
    type: event1_event_type
  - name: event2
    source: ''
    type: event2_event_type
functions:
  - name: systemOut
    type: custom
    operation: sysout
states:
  - name: PrintStartMessage
    type: operation
    actions:
      - name: printSystemOut
        functionRef:
          refName: systemOut
          arguments:
            message: "${\"event-state-timeouts: \" + $WORKFLOW.instanceId + \" has started.\"}"
    transition: WaitForEvent
  - name: WaitForEvent
    type: event
    onEvents:
      - eventRefs: [ event1 ]
        eventDataFilter:
          data: "${ \"The event1 was received.\" }"
          toStateData: "${ .exitMessage }"
        actions:
          - name: printAfterEvent1
            functionRef:
              refName: systemOut
              arguments:
                message: "${\"event-state-timeouts: \" + $WORKFLOW.instanceId + \" executing actions for event1.\"}"
      - eventRefs: [ event2 ]
        eventDataFilter:
          data: "${ \"The event2 was received.\" }"
          toStateData: "${ .exitMessage }"
        actions:
          - name: printAfterEvent2
            functionRef:
              refName: systemOut
              arguments:
                message: "${\"event-state-timeouts: \" + $WORKFLOW.instanceId + \" executing actions for event2.\"}"
    timeouts:
      eventTimeout: PT30S
    transition: PrintExitMessage
  - name: PrintExitMessage
    type: operation
    actions:
      - name: printSystemOut
        functionRef:
          refName: systemOut
          arguments:
            message: "${\"event-state-timeouts: \" + $WORKFLOW.instanceId + \" has finalized. \" + if .exitMessage != null then .exitMessage else \"The event state did not receive any event, and the timeout has overdue\" end }"
    end: true
