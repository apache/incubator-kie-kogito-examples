#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

quarkus.http.port=8080

kogito.service.url=http://localhost:${quarkus.http.port}

quarkus.kogito.devservices.enabled=false
quarkus.devservices.enabled=false

quarkus.swagger-ui.always-include=true
quarkus.kogito.data-index.graphql.ui.always-include=true

# Configuration for the incoming cloud events received by the serverless workflows.
mp.messaging.incoming.kogito_incoming_stream.connector=quarkus-http
mp.messaging.incoming.kogito_incoming_stream.path=/
mp.messaging.incoming.kogito_incoming_stream.method=POST

# Configuration for the helper class EventsProducerResource that send events to the waiting serverless workflows.
mp.messaging.outgoing.response_events.connector=quarkus-http
mp.messaging.outgoing.response_events.url=${K_SINK:${kogito.service.url}}
mp.messaging.outgoing.response_events.method=POST

# Profile to pack this example into a container, to use it execute activate the maven container profile, -Dcontainer
%container.quarkus.container-image.build=true
%container.quarkus.container-image.push=false
%container.quarkus.container-image.group=${USER}
%container.quarkus.container-image.registry=dev.local
%container.quarkus.container-image.tag=1.0-SNAPSHOT
