#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Kogito runtime persistence configurations
kogito.persistence.type=jdbc
kogito.persistence.proto.marshaller=false
kogito.persistence.query.timeout.millis=10000
quarkus.datasource.db-kind=postgresql
kie.flyway.enabled=true

# This env var will be generated with the quarkus-kubernetes plugin. See below.
quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/postgres
quarkus.datasource.username=postgres
quarkus.datasource.password=pass

# Use the Kogito service discovery mechanism to get the current service url.
# For more information see: https://kiegroup.github.io/kogito-docs/serverlessworkflow/latest/cloud/kubernetes-service-discovery.html
kogito.service.url=${knative:services.v1.serving.knative.dev/timeouts-showcase/timeouts-showcase-extended}

# Skip user tasks and variables events sending.
kogito.events.usertasks.enabled=false
kogito.events.variables.enabled=false

# Events produced by kogito-addons-quarkus-jobs-knative-eventing to program the timers on the jobs service.
mp.messaging.outgoing.kogito-job-service-job-request-events.connector=quarkus-http
mp.messaging.outgoing.kogito-job-service-job-request-events.url=${K_SINK:http://localhost:8280/v2/jobs/events}
mp.messaging.outgoing.kogito-job-service-job-request-events.method=POST

# The name of the application. This value will be used for naming Kubernetes resources like: Deployment, Service,  etc.
quarkus.knative.name=timeouts-showcase-extended

# This enables Knative to fetch the image information on Minikube.
# You can change this property with -Pknative -Dquarkus.container-image.group from the command line.
quarkus.container-image.build=true
quarkus.container-image.registry=dev.local
quarkus.container-image.group=${USER}
quarkus.container-image.name=${quarkus.knative.name}
quarkus.kubernetes.deployment-target=knative
quarkus.knative.image-pull-policy=if-not-present
quarkus.knative.env.vars.postgres_host=timeouts-showcase-database

#Optional push to a registry
#quarkus.container-image.registry=quay.io
#quarkus.container-image.push=true

# Naive configuration to facilitate the inspection of the log traces produced by the processes, however you can change
# this values to any valid configuration.
quarkus.knative.min-scale=1
quarkus.knative.max-scale=1