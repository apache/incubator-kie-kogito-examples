quarkus.native.native-image-xmx=8g
quarkus.swagger-ui.always-include=true

quarkus.log.category."org.kie.kogito.addon.quarkus.messaging".level=DEBUG
# Uncomment to use a broader log category.
#quarkus.log.category."org.kie.kogito".level=DEBUG

# Internally, Kogito Serverless Workflow uses the Quarkus OpenAPI Generator extension.
# The default value http://localhost:8282 is used for local testing. In kubernetes environments, the env var
# SUBSCRIPTION_SERVICE_URL will be used instead. This env var is configured in the application-knative.properties file.
quarkus.rest-client.subscription_service_yaml.url=${SUBSCRIPTION_SERVICE_URL:http://localhost:8282}

mp.messaging.incoming.kogito_incoming_stream.connector=quarkus-http
mp.messaging.incoming.kogito_incoming_stream.path=/

# The K_SINK variable is automatically injected by the Knative ecosystem. The default value http://localhost:8181
# is used for local testing, which correspond to the event-display local container.
mp.messaging.outgoing.kogito_outgoing_stream.connector=quarkus-http
mp.messaging.outgoing.kogito_outgoing_stream.url=${K_SINK:http://localhost:8181}

# profile to pack this example into a container, to use it execute activate the maven container profile, -Dcontainer
%container.quarkus.container-image.build=true
%container.quarkus.container-image.push=false
%container.quarkus.container-image.group=${USER}
%container.quarkus.container-image.registry=dev.local
%container.quarkus.container-image.tag=1.0-SNAPSHOT
%container.quarkus.jib.jvm-entrypoint=/home/kogito/kogito-app-launch.sh
%container.quarkus.jib.base-jvm-image=quay.io/kiegroup/kogito-runtime-jvm:latest
%container.quarkus.jib.working-directory=/home/kogito/bin

