#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

quarkus.native.native-image-xmx=8g
quarkus.swagger-ui.always-include=true

quarkus.http.cors=true
quarkus.http.cors.origins=/.*/

quarkus.log.category."org.kie.kogito.addon.quarkus.messaging".level=DEBUG
# Uncomment to use a broader log category.
#quarkus.log.category."org.kie.kogito".level=DEBUG

# Internally, Kogito Serverless Workflow uses the Quarkus OpenAPI Generator extension.
# The default value http://localhost:8282 is used for local testing. In kubernetes environments, the env var
# SUBSCRIPTION_SERVICE_URL will be used instead. This env var is configured in the application-knative.properties file.
quarkus.rest-client.subscription_service_yaml.url=http://localhost:8282

mp.messaging.incoming.kogito_incoming_stream.connector=quarkus-http
mp.messaging.incoming.kogito_incoming_stream.path=/
kogito.addon.messaging.outgoing.cloudEventMode=structured

# The K_SINK variable is automatically injected by the Knative ecosystem. The default value http://localhost:8181
# is used for local testing, which correspond to the event-display local container.
mp.messaging.outgoing.kogito_outgoing_stream.connector=quarkus-http
mp.messaging.outgoing.kogito_outgoing_stream.url=${K_SINK:http://localhost:8181}

# profile to pack this example into a container, to use it execute activate the maven container profile, -Dcontainer
%container.quarkus.container-image.build=true
%container.quarkus.container-image.push=false
%container.quarkus.container-image.group=${USER}
%container.quarkus.container-image.registry=dev.local
%container.quarkus.container-image.tag=1.0-SNAPSHOT

kogito.events.usertasks.enabled=false
kogito.events.variables.enabled=false

