# Use the Kogito service discovery mechanism to get the current service url.
# For more information see: https://kiegroup.github.io/kogito-docs/serverlessworkflow/latest/cloud/kubernetes-service-discovery.html
kogito.service.url=knative:services.v1.serving.knative.dev/newsletter-showcase/subscription-flow

# When the application is generated with the knative profile, it'll require a PostgreSQL database.
# Kogito persistence configurations for enabling the serverless workflow persistence
quarkus.datasource.db-kind=postgresql
quarkus.flyway.migrate-at-start=true
kogito.persistence.type=jdbc
kogito.persistence.proto.marshaller=false
kogito.persistence.query.timeout.millis=10000

# The POSTGRES_HOST env var will be generated by quarkus-kubernetes plugin. See below.
quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/postgres?currentSchema=runtimes
quarkus.datasource.username=postgres
# The POSTGRES_PASSWORD env var will be generated by the quarkus-kubernetes plugin. See below.
quarkus.datasource.password=${POSTGRES_PASSWORD:pass}

# Events produced by kogito-addons-quarkus-jobs-knative-eventing to program the timers on the jobs service.
mp.messaging.outgoing.kogito-job-service-job-request-events.connector=quarkus-http
# The K_SINK variable is automatically injected by the Knative ecosystem. The default value http://localhost:8280
# is used for local testing.
mp.messaging.outgoing.kogito-job-service-job-request-events.url=${K_SINK:http://localhost:8280/v2/jobs/events}
mp.messaging.outgoing.kogito-job-service-job-request-events.method=POST

# process, variables and user tasks events configuration.
mp.messaging.outgoing.kogito-processinstances-events.connector=quarkus-http
mp.messaging.outgoing.kogito-processinstances-events.url=${K_SINK:http://localhost:8180/processes}
mp.messaging.outgoing.kogito-processinstances-events.method=POST

kogito.events.usertasks.enabled=false
mp.messaging.outgoing.kogito-usertaskinstances-events.connector=quarkus-http
mp.messaging.outgoing.kogito-usertaskinstances-events.url=${K_SINK:http://localhost:8180/tasks}
mp.messaging.outgoing.kogito-usertaskinstances-events.method=POST

kogito.events.variables.enabled=false
mp.messaging.outgoing.kogito-variables-events.connector=quarkus-http
mp.messaging.outgoing.kogito-variables-events.url=${K_SINK:http://localhost:8180/variables}
mp.messaging.outgoing.kogito-variables-events.method=POST

## Knative integration:

# Use the Kogito service discovery mechanism to get the subscription-service url and set an env var with name SUBSCRIPTION_SERVICE_URL
# For more information see:
# https://kiegroup.github.io/kogito-docs/serverlessworkflow/latest/cloud/kubernetes-service-discovery.html
# https://quarkus.io/guides/deploying-to-kubernetes#environment-variables-from-keyvalue-pairs
quarkus.knative.env.vars.subscription_service_url=knative:services.v1.serving.knative.dev/newsletter-showcase/subscription-service

# Configure current deployment to set an env var with name POSTGRES_HOST
# For more information see: https://quarkus.io/guides/deploying-to-kubernetes#environment-variables-from-keyvalue-pairs
quarkus.knative.env.vars.postgres_host=newsletter-postgres

# Configure current deployment to be linked with the kubernetes secret newsletter-postgres, and to set an env
# var POSTGRES_PASSWORD that will get it's value form the secret entry with key postgrespass.
# For more information see: https://quarkus.io/guides/deploying-to-kubernetes#secret-mapping
#quarkus.knative.env.secrets=newsletter-postgres
#quarkus.knative.env.mapping.postgres_password.from-secret=newsletter-postgres
#quarkus.knative.env.mapping.postgres_password.with-key=postgrespass

# This configuration enables Knative to fetch the image information on Minikube.
# you can change this property with -Pknative -Dquarkus.container-image.group from the command line.
quarkus.container-image.group=dev.local
quarkus.kubernetes.deployment-target=knative
quarkus.knative.name=subscription-flow
quarkus.knative.image-pull-policy=IfNotPresent

# Kogito Knative integration
# We opt to use the Knative objects instead of the Kogito Source.
org.kie.kogito.addons.knative.eventing.generate-kogito-source=false
