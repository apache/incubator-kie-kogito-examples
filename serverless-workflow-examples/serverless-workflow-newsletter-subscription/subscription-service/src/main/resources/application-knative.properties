# Build the application with the persistence profile to use a PostgreSQL database.
# Kogito persistence configurations for enabling the serverless workflow persistence
quarkus.datasource.db-kind=postgresql
kogito.persistence.type=postgresql
kogito.persistence.auto.ddl=true
kogito.persistence.query.timeout.millis=10000
enable.resource.postgresql=true

# DB configuration, also used by the PostgreSqlQueryRecordRepository
# This env var will be generated with the quarkus-kubernetes plugin. See below.
quarkus.datasource.reactive.url=postgresql://${POSTGRES_HOST:localhost}:5432/postgres
quarkus.datasource.username=postgres
quarkus.datasource.password=pass

quarkus.knative.env.mapping.postgres_password.from-secret=newsletter-postgres
quarkus.knative.env.mapping.postgres_password.with-key=postgrespass

## Knative integration
# this enables Knative to fetch the image information on Minikube.
# you can change this property with -Pknative -Dquarkus.container-image.group from the command line.
quarkus.container-image.group=dev.local
quarkus.kubernetes.deployment-target=knative
quarkus.knative.name=subscription-service
quarkus.knative.image-pull-policy=IfNotPresent
quarkus.knative.env.vars.postgres_host=newsletter-postgres


