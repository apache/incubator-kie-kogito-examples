# Build the application with the persistence profile to use a PostgreSQL database.
# Kogito persistence configurations for enabling the serverless workflow persistence
quarkus.datasource.db-kind=postgresql
kogito.persistence.type=postgresql
kogito.persistence.auto.ddl=true
kogito.persistence.query.timeout.millis=10000

# DB configuration, also used by the PostgreSqlQueryRecordRepository
quarkus.datasource.reactive.url=postgresql://localhost:5432/postgres
quarkus.datasource.username=postgres
quarkus.datasource.password=pass

## Knative integration
mp.messaging.outgoing.kogito_outgoing_stream.url=${K_SINK:http://localhost:8181}
# this enables Knative to fetch the image information on Minikube.
# you can change this property with -Pknative -Dquarkus.container-image.group from the command line.
quarkus.container-image.group=dev.local
quarkus.kubernetes.deployment-target=knative
quarkus.knative.image-pull-policy=IfNotPresent

# Kogito Knative integration
org.kie.kogito.addons.knative.eventing.generate-kogito-source=true
