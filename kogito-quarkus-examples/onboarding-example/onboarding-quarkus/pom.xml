<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.kie.kogito.examples</groupId>
    <artifactId>onboarding-example</artifactId>
    <version>1.35.0.Final</version>
  </parent>
  <artifactId>onboarding-quarkus</artifactId>
  <name>Kogito Example :: Onboarding Example :: Onboarding with Business Process Quarkus</name>
  <description>Onboarding function and service orchestration</description>
  
  <dependencies>
    <dependency>
      <groupId>org.kie.kogito</groupId>
      <artifactId>kogito-quarkus</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie.kogito</groupId>
      <artifactId>kogito-addons-quarkus-monitoring-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie.kogito</groupId>
      <artifactId>kogito-addons-quarkus-kubernetes</artifactId>
    </dependency>

    <!-- Kubernetes deployment extensions -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-kubernetes</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-container-image-jib</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-minikube</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- To run our tests on a mocked environment -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-test-kubernetes-client</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.kogito</groupId>
      <artifactId>kogito-quarkus-test-utils</artifactId>
      <version>${version.org.kie.kogito}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
  </dependencies>
  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <debug>false</debug>
          <jvmArgs>-Dlocal=true</jvmArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>persistence</id>
      <activation>
        <property>
          <name>persistence</name>
        </property>
      </activation>
      <properties>
        <enable.resource.infinispan>true</enable.resource.infinispan>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.kie.kogito</groupId>
          <artifactId>kogito-addons-quarkus-persistence-infinispan</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>minikube</id>
      <properties>
        <quarkus.kubernetes.deploy>true</quarkus.kubernetes.deploy>
        <quarkus.profile>minikube</quarkus.profile>
      </properties>
    </profile>
    <profile>
      <id>kubernetes</id>
      <properties>
        <quarkus.kubernetes.deploy>true</quarkus.kubernetes.deploy>
        <quarkus.profile>kubernetes</quarkus.profile>
      </properties>
    </profile>
    <profile>
      <id>knative</id>
      <properties>
        <quarkus.kubernetes.deploy>true</quarkus.kubernetes.deploy>
        <quarkus.profile>knative</quarkus.profile>
      </properties>
    </profile>
  </profiles>
</project>
