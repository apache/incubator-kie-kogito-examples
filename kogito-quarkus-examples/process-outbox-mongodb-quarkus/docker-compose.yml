version: '2'
services:
  zookeeper:
    image: strimzi/kafka:0.20.1-kafka-2.6.0
    command: [
        "sh", "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: "/tmp/logs"

  kafka:
    image: strimzi/kafka:0.20.1-kafka-2.6.0
    command: [
        "sh", "-c",
        "bin/kafka-server-start.sh config/server.properties --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      LOG_DIR: "/tmp/logs"
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    links:
      - kafka
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
  mongodb:
    build: ./mongodb
    image: kogito/outbox/mongodb
    hostname: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGODB_USER=debezium
      - MONGODB_PASSWORD=dbz
  connect:
    image: debezium/connect:${DEBEZIUM_VERSION}
    ports:
      - "8083:8083"
    links:
      - kafka
      - mongodb
    depends_on:
      - kafka
      - mongodb
    environment:
      - BOOTSTRAP_SERVERS=kafka:29092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=kogito_connect_configs
      - OFFSET_STORAGE_TOPIC=kogito_connect_offsets
      - STATUS_STORAGE_TOPIC=kogito_connect_statuses
  sidecar:
    build: ./sidecar
    image: kogito/outbox/sidecar
    links:
      - connect
      - mongodb
    depends_on:
      - connect
      - mongodb
    environment:
      - MONGODB_HOST=mongodb:27017
      - MONGODB_RS=rs0
      - MONGODB_USER=debezium
      - MONGODB_PASSWORD=dbz
      - KAFKA_HOST=kafka:29092
      - CONNECT_HOST=connect:8083
  kogito:
    build:
      context: ./kogito
      dockerfile: ${KOGITO_DOCKERFILE}
    image: kogito/outbox/quarkus
    ports:
      - "8080:8080"
    links:
      - mongodb
    depends_on:
      - mongodb
      - sidecar
    environment:
      - QUARKUS_MONGODB_CONNECTION_STRING=mongodb://mongodb:27017
      - QUARKUS_MONGODB_CREDENTIALS_USERNAME=debezium
      - QUARKUS_MONGODB_CREDENTIALS_PASSWORD=dbz
      - QUARKUS_MONGODB_CREDENTIALS_AUTH_SOURCE=admin
      - MONGODB_HOST=mongodb:27017