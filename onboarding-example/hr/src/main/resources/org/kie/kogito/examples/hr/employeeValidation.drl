/**
 * Copyright 2019 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.kie.kogito.examples.hr;
unit EmployeeValidation;

query employeeValidation 
  v:/validation
end

rule "Employee exists" 
when
    emp : /employee[ EmployeeRepository.get().isRegistered(personalId) ] 
then
    EmployeeValidationModel val = new EmployeeValidationModel();
    val.setStatus( "exists" );
    val.setMessage( "Employee " + val.getEmployee().getFirstName() + " " + val.getEmployee().getLastName() + " is already registered" );
    validation.set(val);
end

rule "Employee does not exist" 

when
    emp : /employee[ EmployeeRepository.get().isNotRegistered(personalId) ]
then
    EmployeeValidationModel val = new EmployeeValidationModel();
    val.setEmployee(emp);
    val.setStatus( "new" );
	val.setMessage( "Employee " + emp.getFirstName() + " " + emp.getLastName() + " is not yet registered" );
    validation.set(val);
end
