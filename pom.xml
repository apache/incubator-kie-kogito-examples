<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.kie.kogito</groupId>
  <artifactId>kogito-examples</artifactId>
  <version>8.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Kogito Example</name>
  <description>Kogito Example</description>

  <url>http://kogito.kie.org</url>
  <inceptionYear>2019</inceptionYear>
  <organization>
    <name>JBoss by Red Hat</name>
    <url>http://www.jboss.org/</url>
  </organization>
  <licenses>
    <license>
      <name>Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <version.maven>3.6.2</version.maven>
    <version.compiler.plugin>3.8.1</version.compiler.plugin>
    <version.enforcer.plugin>3.0.0-M2</version.enforcer.plugin>
    <maven.compiler.release>11</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <version.source.plugin>3.0.1</version.source.plugin>
    <version.jar.plugin>3.1.0</version.jar.plugin>

    <surefire.forkCount>1</surefire.forkCount>
    <failsafe.include>**/*IT.java</failsafe.include>
    <failsafe.exclude>**/Native*IT.java</failsafe.exclude>
    <alphanetworkCompilerEnabled>false</alphanetworkCompilerEnabled>
    <tests.category></tests.category>

    <version.io.quarkus>1.6.0.Final</version.io.quarkus>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- springboot related -->
    <springboot.version>2.3.1.RELEASE</springboot.version>
    <!-- kogito -->
    <kogito.version>${project.version}</kogito.version>
    <version.org.optaplanner>7.39.0.Final</version.org.optaplanner>
    <!-- infinispan -->
    <infinispan.version>10.1.5.Final</infinispan.version>
    <infinispan.starter.version>2.2.3.Final</infinispan.starter.version>
    <container.image.infinispan>quay.io/infinispan/server:${infinispan.version}</container.image.infinispan>
    <!-- keycloak -->
    <container.image.keycloak.version>8.0.1</container.image.keycloak.version>
    <container.image.keycloak>quay.io/keycloak/keycloak:${container.image.keycloak.version}</container.image.keycloak>
    <!-- testcontainers -->
    <version.testcontainers>1.14.3</version.testcontainers>
    <!-- jsonpath-->
    <version.jayway.jsonpath>2.4.0</version.jayway.jsonpath>
    <version.swagger.plugin>2.1.0</version.swagger.plugin>
    <version.surefire.plugin>2.22.2</version.surefire.plugin>
    <version.deploy.plugin>2.8.2</version.deploy.plugin>
    <!-- license plugin -->
    <version.license.plugin>3.0</version.license.plugin>
    <skipLicensesCheck>false</skipLicensesCheck>
    <!-- cloudevents -->
    <version.cloudevents.api>1.3.0</version.cloudevents.api>

  </properties>

  <!-- distributionManagement section -->
  <distributionManagement>
    <repository>
      <id>jboss-releases-repository</id>
      <name>JBoss Releases Repository</name>
      <url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>jboss-snapshots-repository</id>
      <name>JBoss Snapshot Repository</name>
      <url>https://repository.jboss.org/nexus/content/repositories/snapshots/</url>
    </snapshotRepository>
  </distributionManagement>

  <repositories>
    <!-- Bootstrap repository to locate the parent pom when the parent pom
      has not been build locally. -->
    <repository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Repository Group</name>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
  </repositories>


  <pluginRepositories>
    <pluginRepository>
      <id>jboss-public-repository-group</id>
      <name>JBoss Public Repository Group</name>
      <url>https://repository.jboss.org/nexus/content/groups/public/</url>
      <layout>default</layout>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <scm>
    <connection>scm:git:https://github.com/kiegroup/kogito-examples.git</connection>
    <developerConnection>scm:git:git@github.com:kiegroup/kogito-examples.git</developerConnection>
    <url>https://github.com/kiegroup/kogito-examples</url>
  </scm>

  <developers>
    <developer>
      <name>All developers are listed on the team website</name>
      <url>http://kogito.kie.org/community/team.html</url>
    </developer>
  </developers>
  
  <modules>
    <module>examples-test-utils</module>
  </modules>
  
  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>decisiontable-quarkus-example</module>
        <module>decisiontable-springboot-example</module>
        <module>dmn-listener-quarkus</module>
        <module>dmn-listener-springboot</module>
        <module>dmn-quarkus-example</module>
        <module>dmn-drools-quarkus-metrics</module>
        <module>dmn-springboot-example</module>
        <module>flexible-process-quarkus</module>
        <module>flexible-process-springboot</module>
        <module>kogito-travel-agency</module>
        <module>onboarding-example</module>
        <module>process-business-rules-quarkus</module>
        <module>process-business-rules-springboot</module>
        <module>process-infinispan-persistence-quarkus</module>
        <module>process-infinispan-persistence-springboot</module>
        <module>process-kafka-quickstart-quarkus</module>
        <module>process-kafka-quickstart-springboot</module>
        <module>process-optaplanner-quarkus</module>
        <module>process-optaplanner-springboot</module>
        <module>process-quarkus-example</module>
        <module>process-springboot-example</module>
        <module>process-scripts-quarkus</module>
        <module>process-scripts-springboot</module>
        <module>process-service-calls-quarkus</module>
        <module>process-service-calls-springboot</module>
        <module>process-service-rest-call-quarkus</module>
        <module>process-service-rest-call-springboot</module>
        <module>process-timer-quarkus</module>
        <module>process-timer-springboot</module>
        <module>process-usertasks-custom-lifecycle-quarkus</module>
        <module>process-usertasks-custom-lifecycle-springboot</module>
        <module>process-usertasks-quarkus</module>
        <module>process-usertasks-springboot</module>
        <module>process-usertasks-with-security-oidc-quarkus</module>
        <module>process-usertasks-with-security-oidc-springboot</module>
        <module>process-usertasks-with-security-quarkus</module>
        <module>process-usertasks-with-security-springboot</module>
        <module>rules-quarkus-helloworld</module>
        <module>ruleunit-quarkus-example</module>
        <module>ruleunit-springboot-example</module>
        <module>serverless-workflow-greeting-quarkus</module>
        <module>serverless-workflow-greeting-springboot</module>
        <module>serverless-workflow-service-calls-quarkus</module>
        <module>serverless-workflow-service-calls-springboot</module>
        <module>serverless-workflow-events-quarkus</module>
      </modules>
    </profile>
    <profile>
      <id>persistence</id>
      <activation>
        <property>
          <name>persistence</name>
        </property>
      </activation>
      <properties>
        <tests.category>persistence</tests.category>
      </properties>
      <modules>
        <module>onboarding-example</module>
        <module>process-quarkus-example</module>
        <module>process-springboot-example</module>
      </modules>
    </profile>
    
    <profile>
      <id>events</id>
      <activation>
        <property>
          <name>events</name>
        </property>
      </activation>
      <modules>
        <module>process-quarkus-example</module>
        <module>process-springboot-example</module>
      </modules>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers</artifactId>
        <version>${version.testcontainers}</version>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${version.testcontainers}</version>
      </dependency>
      <dependency>
        <groupId>com.jayway.jsonpath</groupId>
        <artifactId>json-path</artifactId>
        <version>${version.jayway.jsonpath}</version>
      </dependency>
      <dependency>
        <groupId>org.infinispan</groupId>
        <artifactId>infinispan-spring-boot-starter-remote</artifactId>
        <version>${infinispan.starter.version}</version>
      </dependency>
      <dependency>
        <groupId>io.cloudevents</groupId>
        <artifactId>cloudevents-api</artifactId>
        <version>${version.cloudevents.api}</version>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>kafka</artifactId>
        <version>${version.testcontainers}</version>
      </dependency>

      <dependency>
        <groupId>org.kie.kogito</groupId>
        <artifactId>examples-test-utils</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-maven-plugin</artifactId>
          <version>${version.io.quarkus}</version>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${springboot.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${version.surefire.plugin}</version>
          <configuration>
            <forkCount>${surefire.forkCount}</forkCount>
            <reuseForks>true</reuseForks>
            <includes>
              <include>${failsafe.include}</include>
            </includes>
            <excludes>
              <exclude>${failsafe.exclude}</exclude>
            </excludes>
            <systemProperties>
              <tests.category>${tests.category}</tests.category>
              <enable.resource.infinispan>${enable.resource.infinispan}</enable.resource.infinispan>
              <enable.resource.kafka>${enable.resource.kafka}</enable.resource.kafka>
              <container.image.keycloak>${container.image.keycloak}</container.image.keycloak>
              <container.image.infinispan>${container.image.infinispan}</container.image.infinispan>
              <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
              <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            </systemProperties>
            <classesDirectory>${project.build.outputDirectory}</classesDirectory>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${version.enforcer.plugin}</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>${version.maven}</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>${maven.compiler.release}</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>io.openapitools.swagger</groupId>
          <artifactId>swagger-maven-plugin</artifactId>
          <version>${version.swagger.plugin}</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${version.deploy.plugin}</version>
          <configuration>
            <retryFailedDeploymentCount>10</retryFailedDeploymentCount>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.compiler.plugin}</version>
          <configuration>
            <release>${maven.compiler.release}</release>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${version.surefire.plugin}</version>
          <configuration>
            <forkCount>${surefire.forkCount}</forkCount>
            <reuseForks>true</reuseForks>
            <runOrder>hourly</runOrder>
            <systemProperties>
              <tests.category>${tests.category}</tests.category>
              <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            </systemProperties>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.kie.kogito</groupId>
          <artifactId>kogito-maven-plugin</artifactId>
          <version>${project.version}</version>
        </plugin>
        <!-- Packaging -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${version.jar.plugin}</version>
          <executions>
            <execution>
              <id>default-jar</id>
              <configuration>
                <archive>
                  <manifestEntries combine.children="append">
                    <Automatic-Module-Name>${java.module.name}</Automatic-Module-Name>
                  </manifestEntries>
                </archive>
              </configuration>
            </execution>
            <!-- No OSGi manifestEntries for <goal>jar</goal>: if it supported, then felix has already added them -->
            <execution>
              <id>test-jar</id>
              <goals>
                <goal>test-jar</goal>
              </goals>
              <configuration>
                <skipIfEmpty>true</skipIfEmpty>
                <excludes>
                  <exclude>**/logback-test.xml</exclude>
                  <exclude>**/jndi.properties</exclude>
                </excludes>
                <archive>
                  <manifestEntries>
                    <Bundle-SymbolicName>${java.module.name}.tests</Bundle-SymbolicName>
                    <Bundle-Version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}</Bundle-Version>
                    <Bundle-Name>${project.name}</Bundle-Name>
                    <Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
                  </manifestEntries>
                </archive>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              </manifest>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${version.source.plugin}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
              <configuration>
                <archive>
                  <manifestEntries>
                    <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                    <Bundle-SymbolicName>${java.module.name}.source</Bundle-SymbolicName>
                    <Bundle-Version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}</Bundle-Version>
                    <Bundle-Name>${project.name}</Bundle-Name>
                    <Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
                    <Eclipse-SourceBundle>${java.module.name};version="${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}";roots:="."</Eclipse-SourceBundle>
                  </manifestEntries>
                </archive>
              </configuration>
            </execution>
            <execution>
              <id>attach-test-sources</id>
              <goals>
                <goal>test-jar-no-fork</goal>
              </goals>
              <configuration>
                <archive>
                  <manifestEntries>
                    <Bundle-ManifestVersion>2</Bundle-ManifestVersion>
                    <Bundle-SymbolicName>${java.module.name}.tests.source</Bundle-SymbolicName>
                    <Bundle-Version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}</Bundle-Version>
                    <Bundle-Name>${project.name}</Bundle-Name>
                    <Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
                    <Eclipse-SourceBundle>${java.module.name}.tests;version="${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi.snapshot.qualifier}";roots:="."</Eclipse-SourceBundle>
                  </manifestEntries>
                </archive>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- need at least maven 3.6.2, fail fast with actionable error rather than obscure errors like [ Error injecting: private org.eclipse.aether.spi.log.Logger org.apache.maven.repository.internal.DefaultVersionRangeResolver.logger ] -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- Entry needed to create test-jars even for packaging types war, bundle, ... -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- Entry needed to create, install and deploy sources jars -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${version.license.plugin}</version>
        <configuration>
          <header>file:///${maven.multiModuleProjectDirectory}/licensesheader.txt</header>
          <includes>
            <include>**/*.java</include>
          </includes>
          <excludes>
            <exclude>.mvn/**</exclude>
            <exclude>**/kogito-apps/**</exclude>
            <exclude>**/kogito-runtimes/**</exclude>
          </excludes>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin-git</artifactId>
            <version>${version.license.plugin}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <configuration>
              <skip>${skipLicensesCheck}</skip>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
