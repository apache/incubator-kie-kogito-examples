apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: travellers-trigger
spec:
  # the default broker has been enabled in the cluster since the namespace is labeled with knative-eventing-injection=enabled
  broker: default
  filter:
    attributes:
      # name of the message node in our process
      type: travellers
  # the subscriber is the deployed service, any event that match the filter above in the broker will be sent to us
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: process-knative-quickstart-quarkus
---
# simple knative application to display the routed messages
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: event-display
spec:
  template:
    spec:
      containers:
        -  # This corresponds to
          # https://github.com/knative/eventing-contrib/tree/master/cmd/event_display
          image: gcr.io/knative-releases/knative.dev/eventing-contrib/cmd/event_display@sha256:a214514d6ba674d7393ec8448dd272472b2956207acb3f83152d3071f0ab1911
---
apiVersion: eventing.knative.dev/v1beta1
kind: Trigger
metadata:
  name: event-display-trigger
spec:
  # the default broker has been enabled in the cluster since the namespace is labeled with knative-eventing-injection=enabled
  broker: default
  filter:
    # we only listen to events of type success emitted by our ce-processing service
    attributes:
      # the exact same type being generated by our Kogito custom service
      type: process.travelers.processedtravellers
  # the subscriber is the deployed displayer service, any event that match the filter above in the broker will be sent to us
  subscriber:
    ref:
      apiVersion: serving.knative.dev/v1
      kind: Service
      name: event-display